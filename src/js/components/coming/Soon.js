import React, { Component } from "react";
import Prismic from "prismic-javascript";
import Snap from "snapsvg-cjs";
import ReactCSSTransitionReplace from "react-css-transition-replace";
import "Styles/home.scss";
import Path from "Components/coming/Path";
import { Switch, Route } from "react-router-dom";

const apiEndpoint = "https://patmartin.prismic.io/api/v2";

class Soon extends Component {
  constructor() {
    super();

    this.state = {
      soonThick: [
        `M236.31,73.749c-2.941,0-5.811,0.035-8.678-0.043c-0.372-0.01-0.825-0.542-1.077-0.937
      		c-6.219-9.729-12.416-19.472-18.618-29.212c-0.291-0.457-0.594-0.907-1.12-1.302c0,10.441,0,20.883,0,31.41
      		c-3.155,0-6.172,0-9.291,0c0-15.882,0-31.771,0-47.832c1.247,0,2.513,0,3.778,0c1.88,0,3.761,0.046,5.638-0.021
      		c0.838-0.03,1.279,0.281,1.704,0.972c5.796,9.426,11.621,18.835,17.442,28.246c0.22,0.355,0.464,0.696,0.882,1.319
      		c0-10.339,0-20.349,0-30.438c3.162,0,6.215,0,9.341,0C236.31,41.849,236.31,57.737,236.31,73.749z`,
        `M194.945,50.424c-0.208,3.85-0.587,7.617-1.801,11.259c-2.167,6.504-6.488,10.827-13.134,12.65
      		c-5.311,1.456-10.686,1.482-15.998,0.047c-7.178-1.938-11.732-6.719-13.729-13.753c-2.146-7.558-2.055-15.182,0.597-22.64
      		c2.895-8.141,9.867-13.19,18.537-13.634c4.73-0.242,9.357,0.13,13.661,2.334c6.226,3.189,9.357,8.636,10.752,15.204
      		C194.423,44.689,194.586,47.577,194.945,50.424z M184.934,50.286c-0.224-2.021-0.333-4.063-0.698-6.058
      		c-0.656-3.59-2.061-6.829-5.186-8.999c-6.846-4.755-16.438-1.488-19.01,6.547c-1.695,5.297-1.722,10.716-0.32,16.085
      		c1.412,5.407,5,8.267,10.755,8.833c5.422,0.533,10.042-1.919,12.38-6.611C184.389,57.004,184.843,53.701,184.934,50.286z`,
        `M146.802,50.577c-0.067,3.768-0.414,7.49-1.616,11.099c-2.283,6.856-6.913,11.173-13.931,12.866
      		c-4.817,1.162-9.672,1.177-14.489,0.021c-7.26-1.743-12.042-6.302-14.255-13.353c-2.271-7.237-2.251-14.607-0.046-21.857
      		c2.876-9.456,10.305-14.86,20.195-15.051c4.084-0.079,8.063,0.331,11.816,2.07c6.135,2.844,9.525,7.91,11.083,14.243
      		c0.796,3.234,1.045,6.603,1.541,9.912C147,50.544,146.901,50.561,146.802,50.577z M137.131,50.191
      		c-0.445-2.668-0.674-5.395-1.38-7.992c-1.595-5.866-5.659-8.9-11.62-9.005c-5.96-0.106-10.213,2.919-12.086,8.64
      		c-1.148,3.509-1.341,7.135-1.119,10.784c0.087,1.429,0.275,2.869,0.593,4.264c1.418,6.215,4.984,9.283,11.315,9.831
      		c5.668,0.491,10.385-2.416,12.541-7.677C136.534,56.207,136.833,53.248,137.131,50.191z`,
        `M97.954,39.954c-3.253,0-6.326,0-9.493,0c-0.075-0.359-0.148-0.699-0.218-1.041c-0.623-3.037-2.404-4.981-5.44-5.709
      		c-2.732-0.655-5.478-0.659-8.19,0.068c-3.033,0.813-4.574,3.098-4.15,5.956c0.24,1.618,1.212,2.774,2.611,3.354
      		c2.088,0.866,4.272,1.511,6.44,2.17c3.893,1.184,7.853,2.166,11.696,3.491c6.082,2.098,8.624,6.204,8.205,13.777
      		c-0.299,5.404-3.318,9.187-8.134,11.232c-7.93,3.368-15.95,2.913-23.689-0.704c-4.591-2.146-7.498-7.11-7.365-13.199
      		c1.576,0,3.16,0,4.745,0c1.556,0,3.112,0,4.683,0c0.235,0.94,0.34,1.864,0.692,2.683c1.319,3.061,3.948,4.391,7.02,4.982
      		c2.632,0.507,5.271,0.352,7.823-0.477c3.546-1.152,5.141-4.004,4.294-7.452c-0.364-1.483-1.306-2.563-2.657-3.038
      		c-2.399-0.844-4.883-1.445-7.325-2.17c-3.554-1.055-7.197-1.89-10.63-3.252c-5.397-2.142-7.827-6.393-7.696-12.182
      		c0.127-5.664,2.601-9.911,7.804-12.156c7.097-3.062,14.291-2.917,21.178,0.662C95.266,29.607,97.632,34.151,97.954,39.954z`
      ],
      soonThin: [
        `M164.775,49.042c-0.148,7.595-0.538,13.809-2.335,19.843c-0.306,1.026-0.723,2.037-1.227,2.981
      		c-0.911,1.71-2.224,2.96-4.318,2.934c-2.099-0.026-3.317-1.345-4.243-3.05c-1.378-2.537-1.947-5.319-2.381-8.122
      		c-1.501-9.678-1.547-19.352,0.432-28.972c0.43-2.093,1.135-4.159,1.969-6.13c0.769-1.816,2.18-3.047,4.348-3.023
      		c2.123,0.024,3.345,1.325,4.236,3.038c1.806,3.47,2.397,7.271,2.803,11.086C164.439,43.2,164.61,46.795,164.775,49.042z
      		 M154.079,50.147c0.056,0.001,0.113,0.001,0.169,0.002c0,3.356-0.036,6.712,0.011,10.067c0.044,3.153,0.126,6.308,0.298,9.456
      		c0.06,1.093,0.267,2.246,0.711,3.235c0.702,1.561,2.576,1.575,3.378,0.053c0.395-0.749,0.622-1.661,0.658-2.511
      		c0.2-4.666,0.432-9.336,0.438-14.005c0.01-8.189-0.112-16.379-0.239-24.567c-0.02-1.301-0.272-2.618-0.574-3.89
      		c-0.229-0.967-0.824-1.783-1.988-1.748c-1.13,0.034-1.729,0.828-1.982,1.794c-0.25,0.956-0.389,1.962-0.417,2.951
      		C154.363,37.371,154.228,43.76,154.079,50.147z`,
        `M146.426,48.652c-0.189,7.868-0.544,13.934-2.261,19.812c-0.451,1.545-1.128,3.105-2.048,4.415
      		c-1.879,2.677-5.241,2.592-7.167-0.058c-1.463-2.013-2.149-4.358-2.606-6.765c-2.106-11.087-2.183-22.164,0.38-33.19
      		c0.392-1.688,1.019-3.392,1.89-4.883c2-3.422,5.822-3.39,7.913-0.017c1.721,2.776,2.408,5.925,2.794,9.098
      		C145.862,41.5,146.177,45.964,146.426,48.652z M141.451,50.113c-0.122-0.001-0.244-0.001-0.366-0.002
      		c0-6.389,0.041-12.779-0.036-19.167c-0.014-1.202-0.32-2.477-0.807-3.579c-0.684-1.55-2.436-1.574-3.3-0.104
      		c-0.369,0.627-0.597,1.414-0.639,2.142c-0.199,3.426-0.433,6.857-0.433,10.286c0,9.426,0.091,18.853,0.197,28.279
      		c0.016,1.426,0.218,2.868,0.502,4.268c0.197,0.971,0.818,1.803,1.952,1.814c1.172,0.011,1.842-0.793,2.08-1.822
      		c0.267-1.158,0.436-2.361,0.467-3.549C141.228,62.492,141.329,56.302,141.451,50.113z`,
        `M166.266,73.906c0.267-0.179,0.511-0.442,0.804-0.521c1.466-0.395,2.237-1.382,2.354-2.832
      		c0.166-2.068,0.324-4.143,0.329-6.216c0.03-12.035,0.015-24.07,0.012-36.104c0-0.389-0.035-0.779-0.052-1.116
      		c-0.804-0.498-1.898,0.29-2.765-0.889c2.15,0,3.981-0.035,5.808,0.04c0.252,0.01,0.616,0.53,0.701,0.871
      		c1.544,6.156,3.054,12.321,4.571,18.484c0.895,3.636,1.792,7.271,2.845,10.909c0.018-0.162,0.051-0.323,0.051-0.485
      		c-0.011-7.956-0.019-15.912-0.046-23.869c-0.003-0.796-0.107-1.593-0.191-2.387c-0.144-1.358-0.789-2.31-2.17-2.697
      		c-0.295-0.083-0.54-0.345-0.808-0.525c0.041-0.088,0.083-0.176,0.124-0.264c2.373,0,4.746,0,7.329,0
      		c-0.204,0.286-0.309,0.601-0.465,0.629c-2.067,0.371-2.607,1.914-2.817,3.67c-0.137,1.148-0.223,2.309-0.224,3.464
      		c-0.015,13.034-0.01,26.069-0.01,39.103c0,0.476,0,0.952,0,1.428c-0.115,0.061-0.23,0.123-0.345,0.184
      		c-0.211-0.34-0.523-0.654-0.618-1.023c-2.167-8.427-4.31-16.861-6.458-25.292c-1.114-4.371-2.229-8.741-3.344-13.111
      		c-0.035-0.139-0.073-0.277-0.395-0.398c0,0.363,0,0.726,0,1.089c0,10.395-0.011,20.791,0.015,31.186
      		c0.003,1.271,0.157,2.548,0.326,3.81c0.163,1.216,0.869,2.018,2.08,2.371c0.251,0.073,0.449,0.331,0.671,0.504
      		c-0.255,0.115-0.509,0.327-0.765,0.33c-2.142,0.027-4.284,0.015-6.426,0.015C166.347,74.145,166.306,74.025,166.266,73.906z`,
        `M114.505,74.199c0-5.565,0-11.13,0-16.696c0.095-0.038,0.19-0.076,0.285-0.115c0.126,0.313,0.3,0.615,0.371,0.94
      		c0.732,3.35,1.335,6.733,2.22,10.042c0.392,1.465,1.181,2.9,2.081,4.137c1.572,2.163,4.02,1.801,5.069-0.67
      		c1.102-2.597,0.736-5.257,0.103-7.891c-1.139-4.742-3.383-9.037-5.497-13.378c-1.697-3.485-3.474-6.937-4.303-10.757
      		c-0.749-3.451-0.895-6.91,0.556-10.238c0.375-0.859,0.929-1.691,1.573-2.372c1.657-1.752,3.99-1.838,5.787-0.235
      		c0.707,0.631,1.228,1.466,1.885,2.159c0.216,0.228,0.601,0.418,0.895,0.4c0.164-0.01,0.379-0.468,0.432-0.751
      		c0.117-0.626,0.114-1.275,0.227-1.902c0.046-0.254,0.268-0.476,0.668-0.601c0,4.694,0,9.387,0,14.081
      		c-0.127,0.044-0.255,0.089-0.382,0.133c-0.156-0.418-0.362-0.824-0.46-1.255c-0.595-2.604-1.05-5.246-1.792-7.806
      		c-0.379-1.307-1.111-2.581-1.946-3.669c-1.367-1.78-3.525-1.545-4.614,0.427c-1.219,2.208-0.995,4.566-0.408,6.888
      		c1.106,4.383,3.337,8.285,5.395,12.253c2.287,4.409,4.518,8.839,5.107,13.858c0.429,3.66,0.338,7.28-1.554,10.608
      		c-1.299,2.286-3.144,3.287-5.193,2.672c-0.793-0.238-1.537-0.816-2.16-1.393c-0.666-0.618-1.131-1.447-1.743-2.13
      		c-0.751-0.838-1.395-0.675-1.674,0.428c-0.165,0.653-0.188,1.342-0.293,2.012c-0.048,0.303-0.14,0.599-0.212,0.898
      		C114.786,74.251,114.646,74.225,114.505,74.199z`
      ]
    };
  }

  render() {
    return (
      <div className={this.props.active ? "soon-wrap active" : "soon-wrap"}>
        <svg width="297.198px" height="101.026px" viewBox="0 0 297.198 101.026">
          <g
            id="group"
            ref={g => {
              this.group = g;
            }}
          >
            {this.state.soonThin.map((letter, index) => (
              <Path
                id={`path${index}`}
                key={index}
                path={this.state.soonThin[index]}
                path2={this.state.soonThick[index]}
              />
            ))}
          </g>;
        </svg>
      </div>
    );
  }
}

export default Soon;
